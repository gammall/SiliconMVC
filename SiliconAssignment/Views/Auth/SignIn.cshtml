@model SignInViewModel

@{
    ViewData["Title"] = Model.Title;
}


<section id="signin">
    <div class="container">
        <form method="post" asp-controller="Auth" asp-action="SignIn" novalidate>
            <h1>Welcome Back</h1>
            <p>Don't have an account yet? <a asp-controller="Auth" asp-action="SignUp">Sign up here</a></p>

            <div id="content">
                <div id="form-email" class="input-group">
                    <label asp-for=Form.Email></label>
                    <span class="error-message" asp-validation-for="Form.Email"></span>
                    <input asp-for="Form.Email" />
                </div>

                <div id="form-password" class="input-group">
                    <label asp-for=Form.Password></label>
                    <span class="error-message" asp-validation-for="Form.Password"></span>
                    <input asp-for="Form.Password" />
                </div>

                <div id="remember-me" class="checkbox-group">
                    <input asp-for="Form.RememberMe" />
                    <label asp-for=Form.RememberMe>Remember Me</label>
                    <span class="error-message" asp-validation-for="Form.RememberMe"></span>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="error">@Model.ErrorMessage</div>
            }

            <button class="btn-theme-s" id="form-submit" type="submit">@Model.Title</button>
        </form>
    </div>
</section>

@await Html.PartialAsync("_ValidationScriptPartial")